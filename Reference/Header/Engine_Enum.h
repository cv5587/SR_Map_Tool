#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	enum WINMODE { MODE_FULL, MODE_WIN };

	// Dynamic 컴포넌트 경우 매 프레임마다 갱신해야하는 컴포넌트 집단
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };

	enum INFO { INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum ROTATION { ROT_X, ROT_Y, ROT_Z, ROT_END };

	enum TEXTUREID { TEX_NORMAL, TEX_CUBE, TEX_END };

	enum RENDERID { RENDER_PRIORITY, RENDER_NONALPHA, RENDER_ALPHA, RENDER_UI, RENDER_PARTICLE,RENDER_END };

	enum MOUSEKEYSTATE { DIM_LB, DIM_RB, DIM_MB, DIM_END };
	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };


	enum WEAPON { CLAYMORE, MINIGUN, STAFF, SHOTGUN, REVOLVER, ROCKET_LAUNCHER, REACTOR, WEAPON_END };
	enum ITEMTYPE { ITEM_INIT, BULLET, EXP, HEALTH, KEY, MANA };

	enum PORTALID { PORTAL_A, PORTAL_B, PORTAL_C, PORTAL_END }; // 포탈 ID에 따라 지정된 좌표로 이동
	enum TOGGLEID { TOG_RED, TOG_YELLOW, TOG_BLUE, TOG_NORMAL, TOG_END };
	enum DOORID { DOOR_RED, DOOR_YELLOW, DOOR_BLUE, DOOR_GREY, DOOR_END };
	enum BOXID { BOX_NORMAL, BOX_EXPL, PILLAR, THORN, BOX_END };
	enum BARTYPE { BAR_HEALTH, BAR_MANA, BAR_BULLET };
	enum DECOID { DECO_CORPSE, DECO_LAMP, DECO_LIGHTPOST, DECO_SIREN, DECO_END };
	enum BULLETID { BULLET_LOOKER, BULLET_FLAMER, BULLET_END };
	enum COLLIDER_TYPE
	{
		CT_AABB,
		CT_NONE,
		CT_RAY
	};
	enum class IMPORTERTYPE
	{
		BIGGER_THINGS,
		DOOR_RELATIVE,
		GIMMICK,
		ITEM,
		IMPORTERTYPE_END
	};

	enum class BIGGER_THINGS
	{
		Yeti,
		Looker,
		Flamer,
		Thorn,
		BIGGER_THINGS_END
	};

	enum class DOOR_RELATIVE
	{
		TOG_NORMAL,
		TOG_RED,
		TOG_YELLOW,
		TOG_BLUE,
		DOOR_GREY,
		DOOR_RED,
		DOOR_YELLOW,
		DOOR_BLUE,
		DOOR_RELATIVE_END
	};

	enum class BreakableProp
	{
		BOX,
		PILLAR,
		THORN,
		GIMMICK_END
	};


}

#endif // Engine_Enum_h__
